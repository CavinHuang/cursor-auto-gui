name: Build Executables

on:
  push:
    tags:
      - 'v*'  # 添加标签触发条件，匹配 v1.0.0 这样的标签

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build EXE
      run: |
        python scripts/build_windows.py

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: CursorPro-Windows
        path: dist/CursorPro.exe

  build-macos-arm64:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build MacOS ARM executable
      run: |
        python scripts/build_macos_arm64.py

    - name: Set executable permissions
      run: |
        chmod +x dist/CursorPro.app/Contents/MacOS/CursorPro
        find dist/CursorPro.app -type f -name "*.so" -o -name "*.dylib" | xargs chmod +x

    - name: Create entitlements file
      run: |
        cat > entitlements.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
            <true/>
            <key>com.apple.security.cs.allow-jit</key>
            <true/>
            <key>com.apple.security.cs.disable-library-validation</key>
            <true/>
            <key>com.apple.security.automation.apple-events</key>
            <true/>
        </dict>
        </plist>
        EOF

    - name: Ad-hoc code signing
      run: |
        codesign --force --deep --sign - --entitlements entitlements.plist --options runtime dist/CursorPro.app

    - name: Remove quarantine attribute
      run: |
        xattr -rc dist/CursorPro.app

    - name: Upload MacOS ARM artifact
      uses: actions/upload-artifact@v4
      with:
        name: CursorPro-MacOS-ARM64
        path: dist/
        if-no-files-found: error

  build-linux:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build Linux executable
      run: |
        python scripts/build_linux.py

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: CursorPro-Linux
        path: dist/CursorPro

  build-macos-intel:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        arch -x86_64 pip3 install --upgrade pip
        arch -x86_64 pip3 install pyinstaller
        arch -x86_64 pip3 install -r requirements.txt

    - name: Build MacOS Intel executable
      run: |
        python scripts/build_macos_intel.py

    - name: Set executable permissions
      run: |
        chmod +x dist/CursorPro.app/Contents/MacOS/CursorPro

    - name: Upload MacOS Intel artifact
      uses: actions/upload-artifact@v4
      with:
        name: CursorPro-MacOS-Intel
        path: dist/
        if-no-files-found: error

  create-release:
    needs: [build-windows, build-macos-arm64, build-linux, build-macos-intel]
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Extract version
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release archives
        run: |
          cd artifacts

          # Windows 和 Linux 打包
          zip -r CursorPro-Windows-${{ env.VERSION }}.zip CursorPro-Windows
          zip -r CursorPro-Linux-${{ env.VERSION }}.zip CursorPro-Linux

          # macOS ARM64 和 Intel 打包 - 使用保留权限的zip命令
          (cd CursorPro-MacOS-ARM64 && zip -r ../CursorPro-MacOS-ARM64-${{ env.VERSION }}.zip . -X)
          (cd CursorPro-MacOS-Intel && zip -r ../CursorPro-MacOS-Intel-${{ env.VERSION }}.zip . -X)

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/CursorPro-Windows-${{ env.VERSION }}.zip
            artifacts/CursorPro-MacOS-ARM64-${{ env.VERSION }}.zip
            artifacts/CursorPro-Linux-${{ env.VERSION }}.zip
            artifacts/CursorPro-MacOS-Intel-${{ env.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}