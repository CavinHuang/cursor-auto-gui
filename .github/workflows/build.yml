name: Build Executables

on:
  push:
    tags:
      - 'v*'  # 添加标签触发条件，匹配 v1.0.0 这样的标签

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build EXE
      run: |
        python scripts/build_windows.py

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: CursorPro-Windows
        path: dist/CursorPro.exe

  build-macos-arm64:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build MacOS ARM executable
      run: |
        python scripts/build_macos_arm64.py

    - name: Upload MacOS ARM artifact
      uses: actions/upload-artifact@v4
      with:
        name: CursorPro-MacOS-ARM64
        path: dist/
        if-no-files-found: error

  build-linux:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build Linux executable
      run: |
        python scripts/build_linux.py

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: CursorPro-Linux
        path: dist/CursorPro

  build-macos-intel:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        arch -x86_64 pip3 install --upgrade pip
        arch -x86_64 pip3 install pyinstaller
        arch -x86_64 pip3 install -r requirements.txt

    - name: Build MacOS Intel executable
      run: |
        python scripts/build_macos_intel.py

    - name: Upload MacOS Intel artifact
      uses: actions/upload-artifact@v4
      with:
        name: CursorPro-MacOS-Intel
        path: dist/
        if-no-files-found: error

  create-release:
    needs: [build-windows, build-macos-arm64, build-linux, build-macos-intel]
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release archives
        run: |
          cd artifacts
<<<<<<< HEAD
          zip -r CursorPro-Windows.zip CursorPro-Windows/
          zip -r CursorPro-MacOS-ARM64.zip CursorPro-MacOS-ARM64
          zip -r CursorPro-Linux.zip CursorPro-Linux/
          zip -r CursorPro-MacOS-Intel.zip CursorPro-MacOS-Intel

=======
          
          # Windows 和 Linux 打包
          zip -r CursorPro-Windows.zip CursorPro-Windows
          zip -r CursorPro-Linux.zip CursorPro-Linux
          
          # macOS ARM64 打包 - 使用标准 zip 命令并保留目录结构
          (cd CursorPro-MacOS-ARM64 && zip -r ../CursorPro-MacOS-ARM64.zip CursorPro.app)
          
          # macOS Intel 打包 - 使用标准 zip 命令并保留目录结构
          (cd CursorPro-MacOS-Intel && zip -r ../CursorPro-MacOS-Intel.zip CursorPro.app)
>>>>>>> ba8625db6263d063d8649c19719da1aacad4fbfc

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/CursorPro-Windows.zip
            artifacts/CursorPro-MacOS-ARM64.zip
            artifacts/CursorPro-Linux.zip
            artifacts/CursorPro-MacOS-Intel.zip

        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}